<type>[!][(optional scope)]: <subject>

<optional body>

<optional footer>

########################################################################
#
# Type
# - feat: Introduces a new feature
# - fix: Fixes a bug
# - docs: Changes in documentation only
# - style: Code changes that do not impact functionality (e.g.,
#   formatting, white-space, etc)
# - refactor: Code changes that neither fix a bug nor introduce a
#   feature, typically improving code readability or structure
# - deprecate: Deprecating an existing feature (correlates with MINOR
#   in semantic versioning)
# - remove: Removing a feature (which is a breaking change)
# - perf: Code changes that improve performance
# - test: Addition of missing tests or corrections to existing tests
# - chore: Changes that do not modify the source code or test files,
#   like tweaking the build process or adding dependencies
# - build: Changes affecting the build system or external dependencies
#   (e.g., changes in webpack, npm packages)
# - ci: Changes to Continuous Integration configuration files and
#   scripts (e.g., Travis, CircleCI, Jenkins)
# - revert: Reverts a previously made commit
# - WIP: Incomplete changes ("work in progress").
#
# `!`: indicate breaking change.
#
# Scope: A scope MUST consist of a noun describing a section of the
#   codebase surrounded by parenthesis, e.g., fix(parser):
#
#
# Subject
# - use the imperative, present tense: "change" not "changed"/"changes"
# - don't capitalize the first letter
# - no dot (.) at the end
# - the length of the header line (including type and scope) must be
#   less than 72 characters.
#
########################################################################
#
# Body
# - Optional. Should include the motivation for the change and contrast
#   this with previous behavior.
# - The commit body is free-form text and may consist of any number of
#   newline separated paragraphs. It may contain URIs and links to
#   other issues.
# - If possible, use the imperative present tense ("change" not
#   "changed" nor "changes") and follow basic grammar rules: capitalize
#   the first letter, end each sentence with a period, etc.
#   This restriction can be relaxed.
#
########################################################################
#
# Footer
# - One or more footers may be provided one blank line after the body.
# - Footers contains additional information about the commit, such as
#   a description of the breaking changes, the list of issues that the
#   commit will close, and other metadata.
# - Each footer consists of a word token, followed by either a :<space>
#   or <space># separator, followed by a string value.
# - The following footers are defined:
#   - BREAKING CHANGE: describes the breaking changes introduced by the
#     commit. When this footer is used, the breaking change indicator !
#     must be added in the header line.
#   - Close # provides a link to a single issue closed by the commit.
#   - Co-authored-by: collects the name and email address for each
#     co-author.
#
########################################################################
#
# Examples
# - feat: add jwt support
# - feat!: breaking change in API
# - feat!(ui): redesign user profile page
# - fix: fix SQL injection vulnerability
# - fix(database): resolve data race condition
# - docs: update setup section of README
# - style(login): correct indentation in login component
# - refactor: refactor user database schema
# - perf: optimize user retrieval code for faster response
# - test: add tests for jwt authentication
# - test(payment): add tests for the payment gateway
# - chore: update build script
# - chore(deps): update dependencies
# - build(docker): update Dockerfile to use node 14
# - ci: add job for integration tests
# - revert: revert commit a1b2c3d4e5f
# - revert: chore: update README.md
#
#   Revert commit b3befad91a6e39288ea53d540a4a483b0898fb49.
#
########################################################################
#
# References
# - https://www.conventionalcommits.org/en/v1.0.0/
# - https://cheatsheets.zip/conventional-commits
# - https://github.com/FlowingCode/DevelopmentConventions/blob/main/conventional-commits.md
#
########################################################################
